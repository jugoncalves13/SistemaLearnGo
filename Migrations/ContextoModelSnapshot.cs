// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaLearnGo.Models;

#nullable disable

namespace SistemaLearnGo.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaLearnGo.Models.Avaliacao", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AvaliacaoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvaliacaoId"));

                    b.Property<string>("AvaliacaoAvaliado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvaliacaoAvaliado");

                    b.Property<string>("AvaliacaoComentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvaliacaoComentario");

                    b.Property<string>("AvaliacaoQuemAvaliou")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvaliacaoQuemAvaliou");

                    b.Property<int>("CadastroId")
                        .HasColumnType("int");

                    b.HasKey("AvaliacaoId");

                    b.HasIndex("CadastroId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Cadastro", b =>
                {
                    b.Property<int>("CadastroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CadastroId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CadastroId"));

                    b.Property<string>("CadastroCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroCurso");

                    b.Property<string>("CadastroDataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroDataNascimento");

                    b.Property<string>("CadastroEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroEmail");

                    b.Property<string>("CadastroEndereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroEndereço");

                    b.Property<string>("CadastroNomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroNomeCompleto");

                    b.Property<string>("CadastroRm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroRm");

                    b.Property<string>("CadastroSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CadastroSenha");

                    b.Property<int>("FaculdadeId")
                        .HasColumnType("int");

                    b.HasKey("CadastroId");

                    b.HasIndex("FaculdadeId");

                    b.ToTable("Cadastro");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Faculdade", b =>
                {
                    b.Property<int>("FaculdadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FaculdadeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaculdadeId"));

                    b.Property<string>("FaculdadeCidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FaculdadeCidade");

                    b.Property<string>("FaculdadeNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FaculdadeNome");

                    b.HasKey("FaculdadeId");

                    b.ToTable("Faculdade");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoginId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("LoginEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LoginEmail");

                    b.Property<string>("LoginSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LoginSenha");

                    b.HasKey("LoginId");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.OfertarCarona", b =>
                {
                    b.Property<int>("OfertarCaronaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfertarCaronaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfertarCaronaId"));

                    b.Property<string>("OfertarCaronaEndereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OfertarCaronaEndereço");

                    b.Property<DateTime>("OfertarCaronaHorário")
                        .HasColumnType("datetime2")
                        .HasColumnName("OfertarCaronaHorário");

                    b.Property<string>("OfertarCaronaPeriodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OfertarCaronaPeriodo");

                    b.Property<string>("OfertarCaronaVagas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OfertarCaronaVagas");

                    b.Property<string>("OfertarCaronaVeiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OfertarCaronaVeiculo");

                    b.HasKey("OfertarCaronaId");

                    b.ToTable("OfertarCarona");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PerfilId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilId"));

                    b.Property<int>("CadastroId")
                        .HasColumnType("int");

                    b.Property<string>("PerfilFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PerfilFoto");

                    b.HasKey("PerfilId");

                    b.HasIndex("CadastroId");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.SolicitarCarona", b =>
                {
                    b.Property<int>("SolicitarCaronaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SolicitarCaronaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitarCaronaId"));

                    b.Property<int>("FaculdadeId")
                        .HasColumnType("int");

                    b.Property<string>("SolicitarCaronaEndereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SolicitarCaronaEndereço");

                    b.Property<DateTime>("SolicitarCaronaHorário")
                        .HasColumnType("datetime2")
                        .HasColumnName("SolicitarCaronaHorário");

                    b.Property<string>("SolicitarCaronaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SolicitarCaronaNome");

                    b.HasKey("SolicitarCaronaId");

                    b.HasIndex("FaculdadeId");

                    b.ToTable("SolicitarCarona");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Avaliacao", b =>
                {
                    b.HasOne("SistemaLearnGo.Models.Cadastro", "Cadastro")
                        .WithMany()
                        .HasForeignKey("CadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Cadastro", b =>
                {
                    b.HasOne("SistemaLearnGo.Models.Faculdade", "Faculdade")
                        .WithMany()
                        .HasForeignKey("FaculdadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculdade");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.Perfil", b =>
                {
                    b.HasOne("SistemaLearnGo.Models.Cadastro", "Cadastro")
                        .WithMany()
                        .HasForeignKey("CadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("SistemaLearnGo.Models.SolicitarCarona", b =>
                {
                    b.HasOne("SistemaLearnGo.Models.Faculdade", "Faculdade")
                        .WithMany()
                        .HasForeignKey("FaculdadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculdade");
                });
#pragma warning restore 612, 618
        }
    }
}
